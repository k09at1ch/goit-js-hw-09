{"mappings":"AAQA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,GAAIN,EAAe,CACjB,MAAMO,EAAU,WAAWT,2BAC3BU,QAAQC,IAAIF,GACZH,EAAQG,E,KACH,CACL,MAAMA,EAAU,WAAWT,uBAC3BU,QAAQC,IAAIF,GACZF,EAAOE,E,IAERR,EAAM,G,CAIAW,SAASC,cAAc,SAC/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,IAAIf,EAAQgB,OAAOF,EAAMG,OAAOC,SAASlB,MAAMmB,OAC/C,MAAMC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAE7CG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAC3BD,EAASE,KAAK1B,EAAcyB,EAAGvB,IAC/BA,GAASoB,EAGXhB,QAAQqB,WAAWH,GAChBI,MAAMC,IACLlB,QAAQC,IAAIiB,EAAQ,IAErBC,OAAOC,IACNpB,QAAQoB,MAAMA,EAAM,GACpB","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        const message = `Promise ${position} resolved successfully.`;\n        console.log(message);\n        resolve(message);\n      } else {\n        const message = `Promise ${position} failed to resolve.`;\n        console.log(message);\n        reject(message);\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    promises.push(createPromise(i, delay));\n    delay += step;\n  }\n\n  Promise.allSettled(promises)\n    .then((results) => {\n      console.log(results);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n});\n//update scr file"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","message","console","log","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","promises","i","push","allSettled","then","results","catch","error"],"version":3,"file":"03-promises.16c61515.js.map"}