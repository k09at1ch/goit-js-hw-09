{"mappings":"YAQA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,GAAIN,EAAe,CACjB,IAAMO,EAAU,WAAoBC,OAATV,EAAS,2BACpCW,QAAQC,IAAIH,GACZH,EAAQG,E,KACH,CACL,IAAMI,EAAU,WAAoBH,OAATV,EAAS,uBACpCW,QAAQC,IAAIC,GACZN,EAAOM,E,IAERZ,E,IAIMa,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAON,IALA,IAAIjB,EAAQkB,OAAOF,EAAMG,OAAOC,SAASpB,MAAMqB,OACzCC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAE7CG,EAAW,GACRC,EAAI,EAAGA,GAAKF,EAAQE,IAC3BD,EAASE,KAAK5B,EAAc2B,EAAGzB,IAC/BA,GAASsB,EAGXlB,QAAQuB,WAAWH,GAChBI,MAAK,SAACC,GACLnB,QAAQC,IAAIkB,E,IAEbC,OAAM,SAACC,GACNrB,QAAQqB,MAAMA,E","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        const message = `Promise ${position} resolved successfully.`;\n        console.log(message);\n        resolve(message);\n      } else {\n        const message = `Promise ${position} failed to resolve.`;\n        console.log(message);\n        reject(message);\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    promises.push(createPromise(i, delay));\n    delay += step;\n  }\n\n  Promise.allSettled(promises)\n    .then((results) => {\n      console.log(results);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n});\n//update scr file"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","message","concat","console","log","message1","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","promises","i","push","allSettled","then","results","catch","error"],"version":3,"file":"03-promises.7af8400b.js.map"}